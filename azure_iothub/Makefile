# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
endif

OBJDIR := Debug
# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ..

# Boiler-plate
###############################################################################
# Project settings

PROJECT := azure_iothub


# Project settings
###############################################################################
# Objects and Paths

OBJECTS += umqtt/src/mqtt_client.o
OBJECTS += umqtt/src/mqtt_codec.o
OBJECTS += umqtt/src/mqtt_message.o
OBJECTS += iothub_client/src/iothub_message.o
OBJECTS += iothub_client/src/iothub_transport_ll_private.o
OBJECTS += iothub_client/src/iothubtransport.o
OBJECTS += iothub_client/src/iothubtransport_mqtt_common.o
OBJECTS += iothub_client/src/iothubtransporthttp.o
OBJECTS += iothub_client/src/iothubtransportmqtt.o
OBJECTS += iothub_client/src/iothubtransportmqtt_websockets.o
OBJECTS += iothub_client/src/version.o
OBJECTS += iothub_client/src/blob.o
OBJECTS += iothub_client/src/iothub_client.o
OBJECTS += iothub_client/src/iothub_client_authorization.o
OBJECTS += iothub_client/src/iothub_client_core_ll.o
OBJECTS += iothub_client/src/iothub_client_diagnostic.o
OBJECTS += iothub_client/src/iothub_client_ll.o
OBJECTS += iothub_client/src/iothub_client_ll_uploadtoblob.o
OBJECTS += iothub_client/src/iothub_client_retry_control.o
OBJECTS += certs/certs.o
OBJECTS += deps/parson/parson.o
OBJECTS += c-utility/src/string_token.o
OBJECTS += c-utility/src/string_tokenizer.o
OBJECTS += c-utility/src/strings.o
OBJECTS += c-utility/src/urlencode.o
OBJECTS += c-utility/src/usha.o
OBJECTS += c-utility/src/utf8_checker.o
OBJECTS += c-utility/src/uuid.o
OBJECTS += c-utility/src/uws_client.o
OBJECTS += c-utility/src/uws_frame_encoder.o
OBJECTS += c-utility/src/vector.o
OBJECTS += c-utility/src/wsio.o
OBJECTS += c-utility/src/xio.o
OBJECTS += c-utility/src/xlogging.o
OBJECTS += c-utility/src/gb_time.o
OBJECTS += c-utility/src/gballoc.o
OBJECTS += c-utility/src/hmac.o
OBJECTS += c-utility/src/hmacsha256.o
OBJECTS += c-utility/src/http_proxy_io.o
OBJECTS += c-utility/src/httpapiex.o
OBJECTS += c-utility/src/httpapiexsas.o
OBJECTS += c-utility/src/httpheaders.o
OBJECTS += c-utility/src/map.o
OBJECTS += c-utility/src/optionhandler.o
OBJECTS += c-utility/src/sastoken.o
OBJECTS += c-utility/src/sha1.o
OBJECTS += c-utility/src/sha224.o
OBJECTS += c-utility/src/sha384-512.o
OBJECTS += c-utility/src/singlylinkedlist.o
OBJECTS += c-utility/src/azure_base64.o
OBJECTS += c-utility/src/buffer.o
OBJECTS += c-utility/src/connection_string_parser.o
OBJECTS += c-utility/src/consolelogger.o
OBJECTS += c-utility/src/constbuffer.o
OBJECTS += c-utility/src/constmap.o
OBJECTS += c-utility/src/crt_abstractions.o
OBJECTS += c-utility/src/doublylinkedlist.o
OBJECTS += c-utility/src/gb_rand.o
OBJECTS += c-utility/src/gb_stdio.o
OBJECTS += c-utility/adapters/httpapi_compact.o
OBJECTS += c-utility/adapters/platform_toppers.o
OBJECTS += c-utility/adapters/socketio_berkeley.o
OBJECTS += c-utility/adapters/threadapi_toppers.o
OBJECTS += c-utility/adapters/tickcounter_toppers.o
OBJECTS += c-utility/adapters/tlsio_mbedtls.o
OBJECTS += c-utility/adapters/uniqueid_stub.o
OBJECTS += c-utility/adapters/agenttime_mbed.o
OBJECTS += c-utility/adapters/tlsio_wolfssl.o

INCLUDE_PATHS += -I../../musl-1.1.18/include
INCLUDE_PATHS += -I../../asp3_dcre/include
INCLUDE_PATHS += -I../../asp3_dcre/mbed
INCLUDE_PATHS += -I../../asp3_dcre/arch/gcc
INCLUDE_PATHS += -I../../asp3_dcre/arch/arm_gcc/common
INCLUDE_PATHS += -I../../asp3_dcre/arch/arm_gcc/rza1
INCLUDE_PATHS += -I../../asp3_dcre/target/gr_peach_gcc
INCLUDE_PATHS += -I../../azure_iothub/c-utility/inc
INCLUDE_PATHS += -I../../azure_iothub/c-utility/pal/toppers
INCLUDE_PATHS += -I../../azure_iothub/iothub_client/inc
INCLUDE_PATHS += -I../../azure_iothub/iothub_client/inc/internal
INCLUDE_PATHS += -I../../azure_iothub/deps/parson
INCLUDE_PATHS += -I../../azure_iothub/umqtt/inc
INCLUDE_PATHS += -I../../wolfssl-3.15.7/wolfssl
INCLUDE_PATHS += -I../../wolfssl-3.15.7/wolfssl/wolfcrypt
INCLUDE_PATHS += -I../../wolfssl-3.15.7
INCLUDE_PATHS += -I../../mbedtls-2.16.1/include
INCLUDE_PATHS += -I../../curl-7.57.0/include
INCLUDE_PATHS += -I../../zlib-1.2.11/src

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = arm-none-eabi-gcc
CC      = arm-none-eabi-gcc
CPP     = arm-none-eabi-g++
AR      = arm-none-eabi-ar
RANLIB  = arm-none-eabi-ranlib


C_FLAGS += -std=gnu11
C_FLAGS += -c
C_FLAGS += -nostdinc
C_FLAGS += -Wall
C_FLAGS += -Wextra
C_FLAGS += -Wno-unused-parameter
C_FLAGS += -Wno-missing-field-initializers
C_FLAGS += -fmessage-length=0
C_FLAGS += -fno-exceptions
C_FLAGS += -fno-builtin
C_FLAGS += -ffunction-sections
C_FLAGS += -fdata-sections
C_FLAGS += -funsigned-char
C_FLAGS += -MMD
C_FLAGS += -fno-delete-null-pointer-checks
C_FLAGS += -fomit-frame-pointer
C_FLAGS += -Og
C_FLAGS += -g3
C_FLAGS += -mcpu=cortex-a9
C_FLAGS += -mthumb-interwork
C_FLAGS += -marm
C_FLAGS += -march=armv7-a
C_FLAGS += -mfpu=neon-fp16
C_FLAGS += -mfloat-abi=hard
C_FLAGS += -mno-unaligned-access

C_FLAGS += -DUSE_WOLFSSL=1
C_FLAGS += -Dget_time=azure_get_time

CXX_FLAGS += -std=gnu++11
CXX_FLAGS += -nostdinc
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -c
CXX_FLAGS += -Wall
CXX_FLAGS += -Wextra
CXX_FLAGS += -Wno-unused-parameter
CXX_FLAGS += -Wno-missing-field-initializers
CXX_FLAGS += -fmessage-length=0
CXX_FLAGS += -fno-exceptions
CXX_FLAGS += -fno-builtin
CXX_FLAGS += -ffunction-sections
CXX_FLAGS += -fdata-sections
CXX_FLAGS += -funsigned-char
CXX_FLAGS += -MMD
CXX_FLAGS += -fno-delete-null-pointer-checks
CXX_FLAGS += -fomit-frame-pointer
CXX_FLAGS += -Og
CXX_FLAGS += -g3
CXX_FLAGS += -mcpu=cortex-a9
CXX_FLAGS += -mthumb-interwork
CXX_FLAGS += -marm
CXX_FLAGS += -march=armv7-a
CXX_FLAGS += -mfpu=neon-fp16
CXX_FLAGS += -mfloat-abi=hard
CXX_FLAGS += -mno-unaligned-access

CXX_FLAGS += -DUSE_WOLFSSL=1
CXX_FLAGS += -Dget_time=azure_get_time

ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -nostdinc
ASM_FLAGS += -c
ASM_FLAGS += -Wall
ASM_FLAGS += -Wextra
ASM_FLAGS += -Wno-unused-parameter
ASM_FLAGS += -Wno-missing-field-initializers
ASM_FLAGS += -fmessage-length=0
ASM_FLAGS += -fno-exceptions
ASM_FLAGS += -fno-builtin
ASM_FLAGS += -ffunction-sections
ASM_FLAGS += -fdata-sections
ASM_FLAGS += -funsigned-char
ASM_FLAGS += -MMD
ASM_FLAGS += -fno-delete-null-pointer-checks
ASM_FLAGS += -fomit-frame-pointer
ASM_FLAGS += -Og
ASM_FLAGS += -g3
ASM_FLAGS += -mcpu=cortex-a9
ASM_FLAGS += -mthumb-interwork
ASM_FLAGS += -marm
ASM_FLAGS += -march=armv7-a
ASM_FLAGS += -mfpu=neon-fp16
ASM_FLAGS += -mfloat-abi=hard
ASM_FLAGS += -mno-unaligned-access


# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size


all: lib$(PROJECT).a


.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
  
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
  


.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
  
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
  

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -o $@ $<

lib$(PROJECT).a: $(OBJECTS)
	rm -f lib$(PROJECT).a
	$(AR) -rcs lib$(PROJECT).a $(OBJECTS)
	$(RANLIB) lib$(PROJECT).a



# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
